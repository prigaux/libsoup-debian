# Description: disabled some buggy tests following upstream's recommendation,
#Â at least until the next version where they plan to rework or drop those
# Upstream: https://gitlab.gnome.org/GNOME/libsoup/issues/159
Index: libsoup2.4-2.68.0/tests/hsts-db-test.c
===================================================================
--- libsoup2.4-2.68.0.orig/tests/hsts-db-test.c
+++ libsoup2.4-2.68.0/tests/hsts-db-test.c
@@ -131,20 +131,6 @@ do_hsts_db_persistency_test (void)
 }
 
 static void
-do_hsts_db_subdomains_test (void)
-{
-	SoupSession *session = hsts_db_session_new ();
-	session_get_uri (session, "https://localhost/subdomains", SOUP_STATUS_OK);
-	soup_test_session_abort_unref (session);
-
-	session = hsts_db_session_new ();
-	session_get_uri (session, "http://subdomain.localhost", SOUP_STATUS_SSL_FAILED);
-	soup_test_session_abort_unref (session);
-
-	g_remove (DB_FILE);
-}
-
-static void
 do_hsts_db_large_max_age_test (void)
 {
 	SoupSession *session = hsts_db_session_new ();
@@ -179,7 +165,7 @@ main (int argc, char **argv)
 	}
 
 	g_test_add_func ("/hsts-db/basic", do_hsts_db_persistency_test);
-	g_test_add_func ("/hsts-db/subdomains", do_hsts_db_subdomains_test);
+/*	g_test_add_func ("/hsts-db/subdomains", do_hsts_db_subdomains_test);*/
 	g_test_add_func ("/hsts-db/large-max-age", do_hsts_db_large_max_age_test);
 
 	ret = g_test_run ();
Index: libsoup2.4-2.68.0/tests/hsts-test.c
===================================================================
--- libsoup2.4-2.68.0.orig/tests/hsts-test.c
+++ libsoup2.4-2.68.0/tests/hsts-test.c
@@ -162,25 +162,6 @@ hsts_session_new (SoupHSTSEnforcer *enfo
 	return session;
 }
 
-
-static void
-do_hsts_basic_test (void)
-{
-	SoupSession *session = hsts_session_new (NULL);
-
-	session_get_uri (session, "http://localhost", SOUP_STATUS_MOVED_PERMANENTLY);
-	session_get_uri (session, "https://localhost/long-lasting", SOUP_STATUS_OK);
-	session_get_uri (session, "http://localhost", SOUP_STATUS_OK);
-
-	/* The HSTS headers in the url above doesn't include
-	   subdomains, so the request should ask for the unchanged
-	   HTTP address below, to which the server will respond with a
-	   moved permanently status. */
-	session_get_uri (session, "http://subdomain.localhost", SOUP_STATUS_MOVED_PERMANENTLY);
-
-	soup_test_session_abort_unref (session);
-}
-
 static void
 do_hsts_expire_test (void)
 {
@@ -275,18 +256,6 @@ do_hsts_persistency_test (void)
 }
 
 static void
-do_hsts_subdomains_test (void)
-{
-	SoupSession *session = hsts_session_new (NULL);
-	session_get_uri (session, "https://localhost/subdomains", SOUP_STATUS_OK);
-	/* The enforcer should cause the request to ask for an HTTPS
-	   uri, which will fail with an SSL error as there's no server
-	   in subdomain.localhost. */
-	session_get_uri (session, "http://subdomain.localhost", SOUP_STATUS_SSL_FAILED);
-	soup_test_session_abort_unref (session);
-}
-
-static void
 do_hsts_superdomain_test (void)
 {
 	SoupHSTSEnforcer *enforcer = soup_hsts_enforcer_new ();
@@ -407,18 +376,6 @@ do_hsts_ip_address_test (void)
 }
 
 static void
-do_hsts_utf8_address_test (void)
-{
-	SoupSession *session = hsts_session_new (NULL);
-	session_get_uri (session, "https://localhost/subdomains", SOUP_STATUS_OK);
-	/* The enforcer should cause the request to ask for an HTTPS
-	   uri, which will fail with an SSL error as there's no server
-	   in 食狮.中国.localhost. */
-	session_get_uri (session, "http://食狮.中国.localhost", SOUP_STATUS_SSL_FAILED);
-	soup_test_session_abort_unref (session);
-}
-
-static void
 do_hsts_session_policy_test (void)
 {
 	SoupHSTSEnforcer *enforcer = soup_hsts_enforcer_new ();
@@ -570,7 +527,7 @@ main (int argc, char **argv)
 	   interns the header name and further uses of the name use the interned version.
 	   if we ran this test later, then the casing that this tests uses wouldn't be used. */
 	g_test_add_func ("/hsts/case-insensitive-header", do_hsts_case_insensitive_header_test);
-	g_test_add_func ("/hsts/basic", do_hsts_basic_test);
+/*	g_test_add_func ("/hsts/basic", do_hsts_basic_test);*/
 	g_test_add_func ("/hsts/expire", do_hsts_expire_test);
 	g_test_add_func ("/hsts/delete", do_hsts_delete_test);
 	g_test_add_func ("/hsts/replace", do_hsts_replace_test);
@@ -578,7 +535,7 @@ main (int argc, char **argv)
 	g_test_add_func ("/hsts/set_and_delete", do_hsts_set_and_delete_test);
 	g_test_add_func ("/hsts/no_hsts_header", do_hsts_no_hsts_header_test);
 	g_test_add_func ("/hsts/persistency", do_hsts_persistency_test);
-	g_test_add_func ("/hsts/subdomains", do_hsts_subdomains_test);
+/*	g_test_add_func ("/hsts/subdomains", do_hsts_subdomains_test);*/
 	g_test_add_func ("/hsts/superdomain", do_hsts_superdomain_test);
 	g_test_add_func ("/hsts/multiple-headers", do_hsts_multiple_headers_test);
 	g_test_add_func ("/hsts/insecure-sts", do_hsts_insecure_sts_test);
@@ -589,7 +546,7 @@ main (int argc, char **argv)
 	g_test_add_func ("/hsts/case-insensitive-directives", do_hsts_case_insensitive_directives_test);
 	g_test_add_func ("/hsts/optional-quotations", do_hsts_optional_quotations_test);
 	g_test_add_func ("/hsts/ip-address", do_hsts_ip_address_test);
-	g_test_add_func ("/hsts/utf8-address", do_hsts_utf8_address_test);
+/*	g_test_add_func ("/hsts/utf8-address", do_hsts_utf8_address_test);*/
 	g_test_add_func ("/hsts/session-policy", do_hsts_session_policy_test);
 	g_test_add_func ("/hsts/idna-addresses", do_hsts_idna_addresses_test);
 	g_test_add_func ("/hsts/get-domains", do_hsts_get_domains_test);
